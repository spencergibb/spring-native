[
  { "name":"jdk.vm.ci.meta.JavaKind$FormatWithToString[]" },
  { "name":"java.lang.reflect.AnnotatedElement[]" },
  { "name":"java.lang.reflect.GenericDeclaration[]" },
  { "name":"com.netflix.appinfo.ApplicationInfoManager", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.DataCenterInfo", "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.DataCenterInfo$Name", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.EurekaInstanceConfig" },
  { "name":"com.netflix.appinfo.InstanceInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.InstanceInfo$ActionType", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.InstanceInfo$InstanceStatus", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.InstanceInfo$PortWrapper", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.LeaseInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.MyDataCenterInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.AbstractDiscoveryClientOptionalArgs", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getHostnameVerifier","parameterTypes":[] }, {"name":"getSSLContext","parameterTypes":[] }, {"name":"getTransportClientFactories","parameterTypes":[] }, {"name":"setAdditionalFilters","parameterTypes":["java.util.Collection"] }, {"name":"setEurekaJerseyClient","parameterTypes":["com.netflix.discovery.shared.transport.jersey.EurekaJerseyClient"] }, {"name":"setEventBus","parameterTypes":["com.netflix.eventbus.spi.EventBus"] }, {"name":"setEventListeners","parameterTypes":["java.util.Set"] }, {"name":"setHealthCheckCallbackProvider","parameterTypes":["javax.inject.Provider"] }, {"name":"setHealthCheckHandlerProvider","parameterTypes":["javax.inject.Provider"] }, {"name":"setHostnameVerifier","parameterTypes":["javax.net.ssl.HostnameVerifier"] }, {"name":"setPreRegistrationHandler","parameterTypes":["com.netflix.discovery.PreRegistrationHandler"] }, {"name":"setSSLContext","parameterTypes":["javax.net.ssl.SSLContext"] }, {"name":"setTransportClientFactories","parameterTypes":["com.netflix.discovery.shared.transport.jersey.TransportClientFactories"] } ] },
  { "name":"com.netflix.discovery.DiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getAllKnownRegions","parameterTypes":[] }, {"name":"getApplication","parameterTypes":["java.lang.String"] }, {"name":"getApplications","parameterTypes":[] }, {"name":"getApplications","parameterTypes":["java.lang.String"] }, {"name":"getApplicationsForARegion","parameterTypes":["java.lang.String"] }, {"name":"getDiscoveryServiceUrls","parameterTypes":["java.lang.String"] }, {"name":"getEC2DiscoveryUrlsFromZone","parameterTypes":["java.lang.String","com.netflix.discovery.endpoint.EndpointUtils$DiscoveryUrlType"] }, {"name":"getEurekaClientConfig","parameterTypes":[] }, {"name":"getEurekaServiceUrlsFromConfig","parameterTypes":["java.lang.String","boolean"] }, {"name":"getHealthCheckHandler","parameterTypes":[] }, {"name":"getInstanceRemoteStatus","parameterTypes":[] }, {"name":"getInstancesById","parameterTypes":["java.lang.String"] }, {"name":"getInstancesByVipAddress","parameterTypes":["java.lang.String","boolean"] }, {"name":"getInstancesByVipAddress","parameterTypes":["java.lang.String","boolean","java.lang.String"] }, {"name":"getInstancesByVipAddressAndAppName","parameterTypes":["java.lang.String","java.lang.String","boolean"] }, {"name":"getLastSuccessfulHeartbeatTimePeriod","parameterTypes":[] }, {"name":"getLastSuccessfulRegistryFetchTimePeriod","parameterTypes":[] }, {"name":"getNextServerFromEureka","parameterTypes":["java.lang.String","boolean"] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getServiceUrlsFromConfig","parameterTypes":["java.lang.String","boolean"] }, {"name":"getServiceUrlsFromDNS","parameterTypes":["java.lang.String","boolean"] }, {"name":"getStats","parameterTypes":[] }, {"name":"getZone","parameterTypes":["com.netflix.appinfo.InstanceInfo"] }, {"name":"localRegistrySize","parameterTypes":[] }, {"name":"registerEventListener","parameterTypes":["com.netflix.discovery.EurekaEventListener"] }, {"name":"registerHealthCheck","parameterTypes":["com.netflix.appinfo.HealthCheckHandler"] }, {"name":"registerHealthCheckCallback","parameterTypes":["com.netflix.appinfo.HealthCheckCallback"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"unregisterEventListener","parameterTypes":["com.netflix.discovery.EurekaEventListener"] } ] },
  { "name":"com.netflix.discovery.EurekaClient", "allPublicMethods":true },
  { "name":"com.netflix.discovery.EurekaClientConfig", "allPublicMethods":true },
  { "name":"com.netflix.discovery.TimedSupervisorTask", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.converters.jackson.DataCenterTypeInfoResolver", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"com.netflix.discovery.converters.jackson.builder.ApplicationsJacksonBuilder", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.converters.jackson.mixin.InstanceInfoJsonMixIn", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.Application", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.shared.Applications", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.resolver.AsyncResolver", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.servo.annotations.Monitor", "allDeclaredMethods":true },
  { "name":"com.stoyanr.evictor.ConcurrentMapWithTimedEviction" },
  {
    "name":"org.springframework.boot.ClearCachesApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.CommandLineRunner",
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.NativePropertiesListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.SpringApplication",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.SpringBootConfiguration",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.ImportAutoConfiguration",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
  },
  {
    "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
  },
  {
    "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.ResourceProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"getCache","parameterTypes":[] },
      {"name":"getChain","parameterTypes":[] },
      {"name":"getStaticLocations","parameterTypes":[] },
      {"name":"isAddMappings","parameterTypes":[] }
    ]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"hasBeenCustomized","parameterTypes":[] },
      {"name":"setAddMappings","parameterTypes":["boolean"] },
      {"name":"setStaticLocations","parameterTypes":["java.lang.String[]"] }
    ]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] },
      {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }
    ]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] },
      {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] },
      {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] },
      {"name":"configureMessageConverters","parameterTypes":["java.util.List"] },
      {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] },
      {"name":"getMessageCodesResolver","parameterTypes":[] }
    ]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[{"name":"getErrorPath","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[{"name":"getContentType","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.availability.ApplicationAvailability",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.FileEncodingApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.TypeExcludeFilter",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.ConfigDataLocation[]"
  },
  {
    "name":"org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.event.EventPublishingRunListener",
    "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
  },
  {
    "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.ConfigurationProperties",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
  },
  {
    "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.context.properties.bind.Name",
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.env.YamlPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
    "methods":[{"name":"clearCache","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.logging.logback.ColorConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$316/0x000000084024c440",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
    "allPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":["java.lang.ClassLoader"] }]
  },
  {
    "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] },
      {"name":"getAddress","parameterTypes":[] },
      {"name":"getCompression","parameterTypes":[] },
      {"name":"getErrorPages","parameterTypes":[] },
      {"name":"getHttp2","parameterTypes":[] },
      {"name":"getPort","parameterTypes":[] },
      {"name":"getServerHeader","parameterTypes":[] },
      {"name":"getShutdown","parameterTypes":[] },
      {"name":"getSsl","parameterTypes":[] },
      {"name":"getSslStoreProvider","parameterTypes":[] },
      {"name":"setAddress","parameterTypes":["java.net.InetAddress"] },
      {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] },
      {"name":"setErrorPages","parameterTypes":["java.util.Set"] },
      {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] },
      {"name":"setPort","parameterTypes":["int"] },
      {"name":"setServerHeader","parameterTypes":["java.lang.String"] },
      {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] },
      {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] },
      {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] },
      {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] },
      {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] },
      {"name":"getInitParameters","parameterTypes":[] },
      {"name":"isAsyncSupported","parameterTypes":[] },
      {"name":"setAsyncSupported","parameterTypes":["boolean"] },
      {"name":"setInitParameters","parameterTypes":["java.util.Map"] },
      {"name":"setName","parameterTypes":["java.lang.String"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.FilterRegistrationBean"
  },
  {
    "name":"org.springframework.boot.web.servlet.RegistrationBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"getOrder","parameterTypes":[] },
      {"name":"isEnabled","parameterTypes":[] },
      {"name":"onStartup","parameterTypes":["javax.servlet.ServletContext"] },
      {"name":"setEnabled","parameterTypes":["boolean"] },
      {"name":"setOrder","parameterTypes":["int"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"getMultipartConfig","parameterTypes":[] },
      {"name":"getServlet","parameterTypes":[] },
      {"name":"getServletName","parameterTypes":[] },
      {"name":"getUrlMappings","parameterTypes":[] },
      {"name":"setLoadOnStartup","parameterTypes":["int"] },
      {"name":"setMultipartConfig","parameterTypes":["javax.servlet.MultipartConfigElement"] },
      {"name":"setServlet","parameterTypes":["javax.servlet.Servlet"] },
      {"name":"toString","parameterTypes":[] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] },
      {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","boolean"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.error.ErrorController",
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] },
      {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] },
      {"name":"getContextPath","parameterTypes":[] },
      {"name":"getDisplayName","parameterTypes":[] },
      {"name":"getDocumentRoot","parameterTypes":[] },
      {"name":"getInitParameters","parameterTypes":[] },
      {"name":"getJsp","parameterTypes":[] },
      {"name":"getLocaleCharsetMappings","parameterTypes":[] },
      {"name":"getMimeMappings","parameterTypes":[] },
      {"name":"getSession","parameterTypes":[] },
      {"name":"isRegisterDefaultServlet","parameterTypes":[] },
      {"name":"setContextPath","parameterTypes":["java.lang.String"] },
      {"name":"setDisplayName","parameterTypes":["java.lang.String"] },
      {"name":"setDocumentRoot","parameterTypes":["java.io.File"] },
      {"name":"setInitParameters","parameterTypes":["java.util.Map"] },
      {"name":"setInitializers","parameterTypes":["java.util.List"] },
      {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] },
      {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] },
      {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] },
      {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] },
      {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }
    ]
  },
  {
    "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory"
  },
  { "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[ {"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] } ] },
  { "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration" },
  { "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener$BootstrapMarkerConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.BootstrapImportSelector", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "allDeclaredClasses":true },
  { "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[ {"name":"getOrder","parameterTypes":[] }, {"name":"initialize","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] } ] },
  { "name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.config.PropertySourceLocator", "allPublicMethods":true },
  { "name":"org.springframework.cloud.bootstrap.encrypt.AbstractEnvironmentDecrypt", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"isFailOnError","parameterTypes":[] }, {"name":"setFailOnError","parameterTypes":["boolean"] } ] },
  { "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration$KeyCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.bootstrap.marker.Marker" },
  { "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.ServiceInstance", "methods":[{"name":"getScheme","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.actuator.HasFeatures", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.discovery.DiscoveryClient", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClient", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClientImportSelector", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getOrder","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig$$Lambda$686/0x0000000840577c40", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$$Lambda$685/0x0000000840577840", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerInterceptor", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncRestTemplateCustomizer", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalanced", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$$Lambda$688/0x0000000840576840", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$$Lambda$687/0x0000000840577440", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration" },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration" },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistration", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.Registration", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory", "allPublicMethods":true },
  { "name":"org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory", "allPublicMethods":true },
  { "name":"org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.commons.httpclient.HttpClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ConditionalOnOAuth2ClientInResourceServer", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$OAuth2OnClientInResourceServerCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.commons.util.InetUtils", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true },
  { "name":"org.springframework.cloud.commons.util.InetUtilsProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigClientProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigClientRetryBootstrapper","allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigServerConfigDataLocationResolver", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigServerInstanceProvider" },
  { "name":"org.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"locateCollection","parameterTypes":["org.springframework.core.env.Environment"] }] },
  { "name":"org.springframework.cloud.config.environment.Environment", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.config.environment.PropertySource", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.configuration.CompatibilityVerifier", "allPublicMethods":true },
  { "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.configuration.TlsProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.context.config.annotation.RefreshScope", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.context.environment.EnvironmentManager", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }] },
  { "name":"org.springframework.cloud.context.named.NamedContextFactory", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"destroy","parameterTypes":[] }, {"name":"getContextNames","parameterTypes":[] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class[]"] }, {"name":"getInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType"] }, {"name":"getInstances","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getLazyProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setConfigurations","parameterTypes":["java.util.List"] } ] },
  { "name":"org.springframework.cloud.context.named.NamedContextFactory$Specification", "allPublicMethods":true },
  { "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] } ] },
  { "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] } ] },
  { "name":"org.springframework.cloud.context.refresh.ContextRefresher" },
  { "name":"org.springframework.cloud.context.restart.RestartListener", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.context.scope.refresh.RefreshScope" },
  { "name":"org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent" },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager", "allPublicMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.CloudEurekaClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getApplicationInfoManager","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.CloudEurekaInstanceConfig", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnMissingRefreshScope", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnRefreshScope", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientConfigBean", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[ {"name":"shouldEnforceRegistrationAtInit","parameterTypes":[] }, {"name":"shouldUnregisterOnShutdown","parameterTypes":[] } ] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getOrder","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.http.DefaultEurekaClientHttpRequestFactorySupplier", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.EurekaApplications", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerClientConfiguration" },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getOrder","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] } ] },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getInstanceId","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true },
  { "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true }
]
