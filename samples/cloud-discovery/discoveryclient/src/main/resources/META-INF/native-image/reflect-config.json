[
  { "name":"jdk.vm.ci.meta.JavaKind$FormatWithToString[]" },
  { "name":"java.lang.reflect.AnnotatedElement[]" },
  { "name":"java.lang.reflect.GenericDeclaration[]" },
  { "name":"com.netflix.appinfo.ApplicationInfoManager", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.DataCenterInfo", "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.DataCenterInfo$Name", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.EurekaInstanceConfig" },
  { "name":"com.netflix.appinfo.InstanceInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.InstanceInfo$ActionType", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.InstanceInfo$InstanceStatus", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.appinfo.InstanceInfo$PortWrapper", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.LeaseInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.appinfo.MyDataCenterInfo", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.AbstractDiscoveryClientOptionalArgs", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getHostnameVerifier","parameterTypes":[] }, {"name":"getSSLContext","parameterTypes":[] }, {"name":"getTransportClientFactories","parameterTypes":[] }, {"name":"setAdditionalFilters","parameterTypes":["java.util.Collection"] }, {"name":"setEurekaJerseyClient","parameterTypes":["com.netflix.discovery.shared.transport.jersey.EurekaJerseyClient"] }, {"name":"setEventBus","parameterTypes":["com.netflix.eventbus.spi.EventBus"] }, {"name":"setEventListeners","parameterTypes":["java.util.Set"] }, {"name":"setHealthCheckCallbackProvider","parameterTypes":["javax.inject.Provider"] }, {"name":"setHealthCheckHandlerProvider","parameterTypes":["javax.inject.Provider"] }, {"name":"setHostnameVerifier","parameterTypes":["javax.net.ssl.HostnameVerifier"] }, {"name":"setPreRegistrationHandler","parameterTypes":["com.netflix.discovery.PreRegistrationHandler"] }, {"name":"setSSLContext","parameterTypes":["javax.net.ssl.SSLContext"] }, {"name":"setTransportClientFactories","parameterTypes":["com.netflix.discovery.shared.transport.jersey.TransportClientFactories"] } ] },
  { "name":"com.netflix.discovery.DiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getAllKnownRegions","parameterTypes":[] }, {"name":"getApplication","parameterTypes":["java.lang.String"] }, {"name":"getApplications","parameterTypes":[] }, {"name":"getApplications","parameterTypes":["java.lang.String"] }, {"name":"getApplicationsForARegion","parameterTypes":["java.lang.String"] }, {"name":"getDiscoveryServiceUrls","parameterTypes":["java.lang.String"] }, {"name":"getEC2DiscoveryUrlsFromZone","parameterTypes":["java.lang.String","com.netflix.discovery.endpoint.EndpointUtils$DiscoveryUrlType"] }, {"name":"getEurekaClientConfig","parameterTypes":[] }, {"name":"getEurekaServiceUrlsFromConfig","parameterTypes":["java.lang.String","boolean"] }, {"name":"getHealthCheckHandler","parameterTypes":[] }, {"name":"getInstanceRemoteStatus","parameterTypes":[] }, {"name":"getInstancesById","parameterTypes":["java.lang.String"] }, {"name":"getInstancesByVipAddress","parameterTypes":["java.lang.String","boolean"] }, {"name":"getInstancesByVipAddress","parameterTypes":["java.lang.String","boolean","java.lang.String"] }, {"name":"getInstancesByVipAddressAndAppName","parameterTypes":["java.lang.String","java.lang.String","boolean"] }, {"name":"getLastSuccessfulHeartbeatTimePeriod","parameterTypes":[] }, {"name":"getLastSuccessfulRegistryFetchTimePeriod","parameterTypes":[] }, {"name":"getNextServerFromEureka","parameterTypes":["java.lang.String","boolean"] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getServiceUrlsFromConfig","parameterTypes":["java.lang.String","boolean"] }, {"name":"getServiceUrlsFromDNS","parameterTypes":["java.lang.String","boolean"] }, {"name":"getStats","parameterTypes":[] }, {"name":"getZone","parameterTypes":["com.netflix.appinfo.InstanceInfo"] }, {"name":"localRegistrySize","parameterTypes":[] }, {"name":"registerEventListener","parameterTypes":["com.netflix.discovery.EurekaEventListener"] }, {"name":"registerHealthCheck","parameterTypes":["com.netflix.appinfo.HealthCheckHandler"] }, {"name":"registerHealthCheckCallback","parameterTypes":["com.netflix.appinfo.HealthCheckCallback"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"unregisterEventListener","parameterTypes":["com.netflix.discovery.EurekaEventListener"] } ] },
  { "name":"com.netflix.discovery.EurekaClient", "allPublicMethods":true },
  { "name":"com.netflix.discovery.EurekaClientConfig", "allPublicMethods":true },
  { "name":"com.netflix.discovery.TimedSupervisorTask", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.converters.jackson.DataCenterTypeInfoResolver", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"com.netflix.discovery.converters.jackson.builder.ApplicationsJacksonBuilder", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.converters.jackson.mixin.InstanceInfoJsonMixIn", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.Application", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"com.netflix.discovery.shared.Applications", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.resolver.AsyncResolver", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"com.netflix.servo.annotations.Monitor", "allDeclaredMethods":true },
  { "name":"com.stoyanr.evictor.ConcurrentMapWithTimedEviction" },
  { "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.ServiceInstance", "methods":[{"name":"getScheme","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.discovery.DiscoveryClient", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClient", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.discovery.EnableDiscoveryClientImportSelector", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getOrder","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig$$Lambda$686/0x0000000840577c40", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$$Lambda$685/0x0000000840577840", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerInterceptor", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.AsyncRestTemplateCustomizer", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalanced", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$$Lambda$688/0x0000000840576840", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$$Lambda$687/0x0000000840577440", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration" },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration" },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistration", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.client.serviceregistry.Registration", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry", "allPublicMethods":true },
  { "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar", "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager", "allPublicMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.CloudEurekaClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getApplicationInfoManager","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.CloudEurekaInstanceConfig", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnMissingRefreshScope", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnRefreshScope", "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaClientConfigBean", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[ {"name":"shouldEnforceRegistrationAtInit","parameterTypes":[] }, {"name":"shouldUnregisterOnShutdown","parameterTypes":[] } ] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getOrder","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true, "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }] },
  { "name":"org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper", "methods":[{"name":"<init>","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.http.DefaultEurekaClientHttpRequestFactorySupplier", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.EurekaApplications", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerClientConfiguration" },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration", "allDeclaredFields":true, "allDeclaredMethods":true, "allDeclaredConstructors":true },
  { "name":"org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider", "allDeclaredFields":true, "allDeclaredMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider", "allPublicMethods":true },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[ {"name":"getOrder","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] } ] },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration", "allDeclaredFields":true, "allDeclaredMethods":true, "methods":[{"name":"getInstanceId","parameterTypes":[] }] },
  { "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry", "allDeclaredFields":true, "allDeclaredMethods":true, "allPublicMethods":true }
]
